<Button x:Class="br.com.Bonus630DevToolsBar.GMSDragger.Dragger"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:local="clr-namespace:br.com.Bonus630DevToolsBar.GMSDragger"
            mc:Ignorable="d" 
            AllowDrop="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MaxHeight="48" MaxWidth="48" MinWidth="20" MinHeight="20" Width="20" Height="20" Background="{DynamicResource ControlUI.Button.Static.Background}" Padding="1" BorderThickness="0" Click="Button_Click" >
    <Button.Resources>
        <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="pack://application:,,,/Bonus630DevToolsBar;component/Images/Images.xaml"/>
            <ResourceDictionary Source="pack://application:,,,/Bonus630DevToolsBar;component/RunCommandDocker/Styles/Colors.xaml"/>
            <ResourceDictionary Source="pack://application:,,,/Bonus630DevToolsBar;component/RunCommandDocker/Styles/Styles.xaml"/>
        </ResourceDictionary.MergedDictionaries>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type local:Dragger}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource ControlUI.Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ControlUI.Button.Static.Border}"/>
         
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
           
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:Dragger}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ControlUI.Button.Static.Background}"/>
                            </Trigger>
                         
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ControlUI.Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ControlUI.Button.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                            </Trigger>
                          

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        </ResourceDictionary>

    </Button.Resources>
    <Image Source="/Bonus630DevToolsBar;component/Images/drag.png" />



    <Button.ToolTip>
        <Label Content="Drag a GMS file" />
    </Button.ToolTip>
    <Button.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Open User GMS Folder" Click="MenuItemUserGMS_Click" >
                <MenuItem.Icon>
                    <Image Style="{DynamicResource OpenFolderImg}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Open Program GMS Folder" Click="MenuItemGMS_Click">
                <MenuItem.Icon>
                    <Image Style="{DynamicResource OpenFolderImg}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </Button.ContextMenu>
</Button>
